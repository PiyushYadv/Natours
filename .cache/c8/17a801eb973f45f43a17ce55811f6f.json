{"id":"T4NO","dependencies":[{"name":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/package.json","includedInParent":true,"mtime":1755611163991},{"name":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/typed-array-buffer/package.json","includedInParent":true,"mtime":1755592933881},{"name":"es-errors/type","loc":{"line":3,"column":25,"index":40},"parent":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/typed-array-buffer/index.js","resolved":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/es-errors/type.js"},{"name":"call-bound","loc":{"line":5,"column":24,"index":84},"parent":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/typed-array-buffer/index.js","resolved":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/call-bound/index.js"},{"name":"is-typed-array","loc":{"line":10,"column":27,"index":290},"parent":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/typed-array-buffer/index.js","resolved":"/Users/piyush_yadav/Desktop/projects/Web Development/MERN/Jonas Backend Course/natours/node_modules/is-typed-array/index.js"}],"generated":{"js":"\"use strict\";var r=require(\"es-errors/type\"),e=require(\"call-bound\"),t=e(\"TypedArray.prototype.buffer\",!0),u=require(\"is-typed-array\");module.exports=t||function(e){if(!u(e))throw new r(\"Not a Typed Array\");return e.buffer};"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"$TypeError","original":{"line":3,"column":4},"generated":{"line":1,"column":17}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"require","original":{"line":3,"column":17},"generated":{"line":1,"column":19}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":3,"column":25},"generated":{"line":1,"column":27}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"callBound","original":{"line":5,"column":4},"generated":{"line":1,"column":45}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"require","original":{"line":5,"column":16},"generated":{"line":1,"column":47}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":5,"column":24},"generated":{"line":1,"column":55}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"$typedArrayBuffer","original":{"line":8,"column":4},"generated":{"line":1,"column":69}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"callBound","original":{"line":8,"column":24},"generated":{"line":1,"column":71}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":8,"column":34},"generated":{"line":1,"column":73}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":8,"column":65},"generated":{"line":1,"column":104}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"isTypedArray","original":{"line":10,"column":4},"generated":{"line":1,"column":107}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"require","original":{"line":10,"column":19},"generated":{"line":1,"column":109}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":10,"column":27},"generated":{"line":1,"column":117}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"module","original":{"line":14,"column":0},"generated":{"line":1,"column":135}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"exports","original":{"line":14,"column":7},"generated":{"line":1,"column":142}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"$typedArrayBuffer","original":{"line":14,"column":17},"generated":{"line":1,"column":150}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":14,"column":38},"generated":{"line":1,"column":153}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"x","original":{"line":14,"column":64},"generated":{"line":1,"column":162}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":15,"column":1},"generated":{"line":1,"column":165}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"isTypedArray","original":{"line":15,"column":6},"generated":{"line":1,"column":169}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"x","original":{"line":15,"column":19},"generated":{"line":1,"column":171}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":16,"column":2},"generated":{"line":1,"column":174}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":16,"column":8},"generated":{"line":1,"column":180}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"$TypeError","original":{"line":16,"column":12},"generated":{"line":1,"column":184}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":16,"column":23},"generated":{"line":1,"column":186}},{"source":"../../node_modules/typed-array-buffer/index.js","original":{"line":18,"column":1},"generated":{"line":1,"column":207}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"x","original":{"line":18,"column":8},"generated":{"line":1,"column":214}},{"source":"../../node_modules/typed-array-buffer/index.js","name":"buffer","original":{"line":18,"column":10},"generated":{"line":1,"column":216}}],"sources":{"../../node_modules/typed-array-buffer/index.js":"'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\n\n/** @type {undefined | ((thisArg: import('.').TypedArray) => Buffer<ArrayBufferLike>)} */\nvar $typedArrayBuffer = callBound('TypedArray.prototype.buffer', true);\n\nvar isTypedArray = require('is-typed-array');\n\n/** @type {import('.')} */\n// node <= 0.10, < 0.11.4 has a nonconfigurable own property instead of a prototype getter\nmodule.exports = $typedArrayBuffer || function typedArrayBuffer(x) {\n\tif (!isTypedArray(x)) {\n\t\tthrow new $TypeError('Not a Typed Array');\n\t}\n\treturn x.buffer;\n};\n"},"lineCount":null}},"error":null,"hash":"70cbb3998bc4217df7fad4f4d2929cdf","cacheData":{"env":{}}}